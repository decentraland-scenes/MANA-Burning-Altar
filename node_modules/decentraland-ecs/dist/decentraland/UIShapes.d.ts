import { Shape } from './Components';
/**
 * @public
 */
export declare class UIWorldSpaceShape extends Shape {
    readonly tag: string;
    id: string | null;
    width: string;
    height: string;
    visible: boolean;
}
/**
 * @public
 */
export declare class UIScreenSpaceShape extends Shape {
    readonly tag: string;
    id: string | null;
    visible: boolean;
}
/**
 * @public
 */
export declare class UIContainerRectShape extends Shape {
    readonly tag: string;
    id: string | null;
    opacity: number;
    adaptWidth: boolean;
    adaptHeight: boolean;
    thickness: number;
    cornerRadius: number;
    width: string;
    height: string;
    top: string;
    left: string;
    color: string;
    background: string;
    hAlign: string;
    vAlign: string;
    visible: boolean;
}
/**
 * @public
 */
export declare class UIContainerStackShape extends Shape {
    readonly tag: string;
    id: string | null;
    opacity: number;
    adaptWidth: boolean;
    adaptHeight: boolean;
    width: string;
    height: string;
    top: string;
    left: string;
    color: string;
    background: string;
    hAlign: string;
    vAlign: string;
    vertical: boolean;
    visible: boolean;
}
/**
 * @public
 */
export declare class UITextShape extends Shape {
    readonly tag: string;
    id: string | null;
    outlineWidth: number;
    outlineColor: string;
    color: string;
    fontFamily: string;
    fontSize: number;
    fontWeight: string;
    opacity: number;
    value: string;
    lineSpacing: string;
    lineCount: number;
    resizeToFit: boolean;
    textWrapping: boolean;
    shadowBlur: number;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowColor: string;
    zIndex: number;
    hAlign: string;
    vAlign: string;
    hTextAlign: string;
    vTextAlign: string;
    width: string;
    height: string;
    top: string;
    left: string;
    paddingTop: string;
    paddingRight: string;
    paddingBottom: string;
    paddingLeft: string;
    visible: boolean;
}
/**
 * @public
 */
export declare class UIInputTextShape extends Shape {
    readonly tag: string;
    id: string | null;
    color: string;
    thickness: number;
    fontFamily: string;
    fontSize: number;
    fontWeight: string;
    opacity: number;
    value: string;
    placeholderColor: string;
    placeholder: string;
    margin: string;
    maxWidth: string;
    autoStretchWidth: boolean;
    background: string;
    focusedBackground: string;
    shadowBlur: number;
    shadowOffsetX: number;
    shadowOffsetY: number;
    shadowColor: string;
    zIndex: number;
    hAlign: string;
    vAlign: string;
    width: string;
    height: string;
    top: string;
    left: string;
    paddingTop: string;
    paddingRight: string;
    paddingBottom: string;
    paddingLeft: string;
    onChanged: string;
    onFocus: string;
    onBlur: string;
    visible: boolean;
    isPointerBlocker: boolean;
}
/**
 * @public
 */
export declare class UIImageShape extends Shape {
    readonly tag: string;
    id: string | null;
    opacity: number;
    sourceLeft: string | null;
    sourceTop: string | null;
    sourceWidth: string | null;
    sourceHeight: string | null;
    source: string | null;
    width: string;
    height: string;
    top: string;
    left: string;
    hAlign: string;
    vAlign: string;
    paddingTop: string;
    paddingRight: string;
    paddingBottom: string;
    paddingLeft: string;
    visible: boolean;
    isPointerBlocker: boolean;
}
/**
 * @public
 */
export declare class UISliderShape extends Shape {
    readonly tag: string;
    id: string | null;
    minimum: number;
    maximum: number;
    color: string;
    opacity: number;
    value: number;
    borderColor: string;
    background: string;
    barOffset: string;
    thumbWidth: string;
    isThumbCircle: boolean;
    isThumbClamped: boolean;
    isVertical: boolean;
    visible: boolean;
    zIndex: number;
    hAlign: string;
    vAlign: string;
    width: string;
    height: string;
    top: string;
    left: string;
    paddingTop: string;
    paddingRight: string;
    paddingBottom: string;
    paddingLeft: string;
    onChanged: string;
    swapOrientation: boolean;
    isPointerBlocker: boolean;
}
